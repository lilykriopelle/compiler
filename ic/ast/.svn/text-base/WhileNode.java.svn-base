package ic.ast;

import ic.error.ScopingError;
import ic.error.TACError;
import ic.error.TypeError;

public class WhileNode extends StmtNode {
	ExprNode cond;
	StmtNode block;
	
	public WhileNode(int line, ExprNode cond,
			StmtNode block) {
		super(line);
		this.cond = cond;
		this.block = block;
	}

	public ExprNode getCondition() {
		return cond;
	}
	
	public StmtNode getBlock() {
		return block;
	}
	
	 
	public String toString() {
		return "while ( " + cond + " ) " + block;
	}
	
	 
	public void accept(Visitor v) throws Exception {
		v.visit(this);
	}
	
	 
	public <UpType,DownType> UpType accept(PropagatingVisitor<UpType,DownType> v, DownType t) throws Exception {
		return v.visit(this, t);
	}
	
	 
	public <DownType> void accept(PropagateDownVisitor<DownType> v, DownType t) throws Exception {
		v.visit(this, t); 
	}
	
	 
	public <UpType> UpType accept(PropagateUpVisitor<UpType> v) throws Exception {
		return v.visit(this); 
	}
	
	
}
