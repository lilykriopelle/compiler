package ic.ast;

import ic.error.TACError;


public abstract class ASTNode {
	int line; 
	
	public ASTNode(int line) {
		this.line = line;
	} 

	public int getLine() {
		return line; 
	}
	
	public void accept(Visitor v) throws Exception {
		throw new TACError(0, "Trying to act on an abstract node instead of a subclass.");
	}
	
	public <UpType,DownType> UpType accept(PropagatingVisitor<UpType,DownType> v, DownType t) throws Exception {
		throw new TACError(0, "Trying to act on an abstract node instead of a subclass.");
	}
	
	public <DownType> void accept(PropagateDownVisitor<DownType> v, DownType t) throws Exception {
		throw new TACError(0, "Trying to act on an abstract node instead of a subclass.");
	}
	
	public <UpType> UpType accept(PropagateUpVisitor<UpType> v) throws Exception {
		throw new TACError(0, "Trying to act on an abstract node instead of a subclass.");
	}
}
