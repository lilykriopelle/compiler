package ic.ast;

import ic.error.ScopingError;
import ic.error.TACError;
import ic.error.TypeError;


public class ArrayTypeNode extends TypeNode {
	TypeNode elementType;
	
	public ArrayTypeNode(int line,
			TypeNode elementType) {
		super(line);
		this.elementType = elementType;
	}

	public TypeNode getElementType() {
		return elementType; 
	}
	
	  
	public boolean isEqualTo(TypeNode t) {
		if(t instanceof ArrayTypeNode) {
			if(((ArrayTypeNode)t).getElementType().isEqualTo(elementType))
				return true;
		}
		return false; 
	}
	
	 
	public String toString() {
		return elementType.toString() + "[]";
	}	
	
	 
	public void accept(Visitor v) {
		v.visit(this);
	}
	
	 
	public <UpType,DownType> UpType accept(PropagatingVisitor<UpType,DownType> v, DownType t) throws Exception {
		return v.visit(this, t);
	}
	
	 
	public <DownType> void accept(PropagateDownVisitor<DownType> v, DownType t) throws Exception {
		v.visit(this, t); 
	}
	
	 
	public <UpType> UpType accept(PropagateUpVisitor<UpType> v) throws Exception {
		return v.visit(this); 
	}
	
}
