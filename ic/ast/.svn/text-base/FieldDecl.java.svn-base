package ic.ast;

import ic.error.ScopingError;
import ic.error.TACError;
import ic.error.TypeError;

public class FieldDecl extends Decl {
	
	public FieldDecl(int line, String name) {
		super(line, name);
		this.name = name;
	}
	
	public void setType(TypeNode type) {
		super.type = type; 
	}
	
	public TypeNode getType() {
		return type;
	}
	
	@Override
	public String toString() {
		if (type != null) return type.toString() + " " + name + ";";
		else return name + ";";
	} 
	
	public void accept(Visitor v) throws Exception {
		v.visit(this);
	}
	
	public <UpType,DownType> UpType accept(PropagatingVisitor<UpType,DownType> v, DownType t) {
		return v.visit(this, t);
	}
	
	public <DownType> void accept(PropagateDownVisitor<DownType> v, DownType t) throws Exception {
		v.visit(this, t); 
	}
	
	public <UpType> UpType accept(PropagateUpVisitor<UpType> v) throws Exception {
		return v.visit(this); 
	}
	
	
}
