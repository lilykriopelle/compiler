package ic.ast;


public class VarDecl extends Decl {
	boolean isParameter;
	int index = 0; 
	
	public VarDecl(int line, String name, TypeNode type, boolean isParameter) {
		super(line, name); 
		this.isParameter = isParameter;
		super.setType(type);
	}	 
	
	public void isParameter(boolean isParameter) {
		this.isParameter = isParameter; 
	}
	
	@Override
	public boolean isParameter() {
		return isParameter;
	}
	
	@Override
	public void setOffset(int index) {
		this.index = index; 
		if (index > 0) {
			super.offset = index * 8 + 8;
		} else {
			this.index = -index; 
			super.offset = index * 8 - 8; 
		}
	}
	
	//Returns the index representation of the offset
	public int getIndex() {
		return index; 
	}
	
	 
	public String toString() {
		if (type != null) {
			return type.toString() + " " + super.getName();
		} else {
			return name; 
		}
	}
	
	 
	public String resolvedToString() {
		String typeName = "";
		if(type != null)  typeName = "type " + type; 
		return " resolved to " + typeName + " on line " + line; 
	}
	
	 
	public void accept(Visitor v) throws Exception {
		v.visit(this);
	}
	
	 
	public <UpType,DownType> UpType accept(PropagatingVisitor<UpType,DownType> v, DownType t) throws Exception {
		return v.visit(this, t);
	}
	
	 
	public <DownType> void accept(PropagateDownVisitor<DownType> v, DownType t) throws Exception {
		v.visit(this, t); 
	}
	
	 
	public <UpType> UpType accept(PropagateUpVisitor<UpType> v) throws Exception {
		return v.visit(this); 
	}

	
}
