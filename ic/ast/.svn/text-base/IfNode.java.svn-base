package ic.ast;

public class IfNode extends StmtNode {
	ExprNode cond; 
	StmtNode thenBlock;
	StmtNode elseBlock;
	
	public IfNode(int line, ExprNode cond,
			StmtNode thenBlock, StmtNode elseBlock) {
		super(line);
		this.cond = cond;
		this.thenBlock = thenBlock;
		this.elseBlock = elseBlock;
	}

	public ExprNode getCondition() {
		return cond;
	}
	
	public StmtNode getThen() {
		return thenBlock;
	}
	
	public StmtNode getElse() {
		return elseBlock;
	}
	
	
	@Override
	public String toString() {
		String toString = "if( " + cond + " ) {" + thenBlock; 
		if(elseBlock != null) toString += "else " + elseBlock; 
		return toString; 
	} 
	
	 
	public void accept(Visitor v) throws Exception {
		v.visit(this);
	}
	
	 
	public <UpType,DownType> UpType accept(PropagatingVisitor<UpType,DownType> v, DownType t) throws Exception {
		return v.visit(this, t);
	}
	
	 
	public <DownType> void accept(PropagateDownVisitor<DownType> v, DownType t) throws Exception {
		v.visit(this, t); 
	}
	
	 
	public <UpType> UpType accept(PropagateUpVisitor<UpType> v) throws Exception {
		return v.visit(this); 
	}
	
	
}
